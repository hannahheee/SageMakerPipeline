# This is a basic workflow to help you get started with Actions
name: Run PR Merge

# run when a pr contains an comment
on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      run-sagemaker:
        description: 'Need to run sagemaker'     
        required: true
        type: boolean

# permission can be added at job level or workflow level    
permissions:
      id-token: write
      contents: write    # This is required for actions/checkout
      issues: write
      pull-requests: write

# define global variable
env:
    PR_NUMBER: ${{ github.event.number }} # Only available for pr (no push)
    GITHUB_TOKEN: ${{ secrets.PR_TOKEN }}
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    SLACK_CHANNEL: topn-pipeline
         

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    if: contains(github.event.pull_request.body, 'run_sagemaker') || github.event.inputs.run-sagemaker == 'true'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: PR checkout
        uses: actions/checkout@v3

      - name: Setup Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
          
      - name: Install requirements
        run: pip install --requirement requirements.txt
      
      #find the branch name and current commit
      - name: Set branch and commit
        uses: rlespinasse/github-slug-action@v4  
  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::576788201127:role/github-workflow-action
          aws-region: us-west-1
          role-duration-seconds: 7200
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: pipeline
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./docker/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Run a training script
        run: |
          python src/sagemaker_train.py

      - name: Run on failure or cancelled
        if: ${{ failure() || cancelled() }}
        env: 
          GITHUB_BRANCH: ${{ env.GITHUB_HEAD_REF }}   
          GITHUB_COMMIT: ${{ env.GITHUB_SHA_SHORT }}
          JOB_STATUS: ${{ job.status }}
          PR_URL: ${{ github.event.pull_request._links.html.href }}
        run:
          python src/slack_notify.py  

  pr_review_notify:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: PR checkout
        uses: actions/checkout@v3

      - name: Setup Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
          
      - name: Install requirements
        run: pip install --requirement requirements.txt
        
      - name: Set branch and commit
        uses: rlespinasse/github-slug-action@v4  

      #nrun notify always success, failure and cancelled
      - name: Notify
        if: ${{ always() }}
        env: 
          GITHUB_BRANCH: ${{ env.GITHUB_HEAD_REF }}   
          GITHUB_COMMIT: ${{ env.GITHUB_SHA_SHORT }}
          JOB_STATUS: ${{ job.status }}
          PR_URL: ${{ github.event.pull_request._links.html.href }}
        run: |
          echo ${{ github.event.pull_request.body }}
          echo ${{ contains(github.event.pull_request.body, 'run_sagemaker') }}
          python src/slack_notify.py 